<?php
declare(strict_types=1);

namespace App\Controller;

use Cake\Event\EventInterface;

/**
 * Subcategories Controller
 *
 * @property \App\Model\Table\SubcategoriesTable $Subcategories
 */
class SubcategoriesController extends AppController
{
    public function beforeFilter(EventInterface $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub

        $this->Authentication->addUnauthenticatedActions(['login']);

        $user = $this->Authentication->getIdentity();
        if (isset($user) and $user->role === 'user') {
            if (!in_array($this->request->getParam('action'), ['index', 'edit'])) {
                //$this->redirect($this->request->referer());
                $this->Flash->error('Usted no esta autorizado para acceder al Sitio Solicitado');
                $this->redirect(['controller' => 'Index', 'action' => 'index']);
            }
        }
    }

    public function index()
    {
        $sub_categories = $this->Subcategories->find('all', [
            'contain' => ['Categories'],
        ]);
        //debug($sub_categories->toArray());
        $this->set(compact('sub_categories'));
    }

    public function add()
    {
        $sub_categories = $this->Subcategories->newEmptyEntity();

        $model_categories = $this->getTableLocator()->get('Categories');

        $categories = $model_categories->find(
            'list',
            [
            'keyField' => 'idcategories',
            'valueField' => 'name',
            'order' => ['name' => 'ASC'],
            ]
        )->toArray();

        if ($this->request->is('post')) {
            $sub_categories = $this->Subcategories->patchEntity($sub_categories, $this->request->getData());
            if ($this->Subcategories->save($sub_categories)) {
                $this->Flash->success(__('La Subcategoria se almaceno correctamente.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('La Subcategoria no se pudo guardar. Intente nuevamente.'));
        }

        $this->set(compact('categories'));
        $this->set(compact('sub_categories'));
    }

    public function getSubCategoriesByCategory($category = null)
    {



        //comprobacion de definicion de variable
        if ($category != null) {

            $subcategories = $this->Subcategories->find(
                'list',
                [
                    'keyField' => 'idsubcategories',
                    'valueField' => 'name',
                    'order' => ['name' => 'ASC'],
                ]
            )
                ->where(['categories_idcategories' => $category])
                ->toArray();

            return $this->json($subcategories);
        }

        return $this->json(['result' => false]);
    }
}
